#!/bin/bash

# Check 1 argument is provided
if [ $# -ne 1 ]; then
  echo "Error: Please provide a filename."
  exit 1
fi
# Configuration file
config_file=$1

# Ask for DNS entries
read -p "Enter DNS entries separated by semicolon (;): " dns_input
IFS=';' read -ra dns_array <<< "$dns_input"

# If the array is empty, add localhost to dns_array
if [ ${#dns_array[@]} -eq 0 ]; then
    dns_array[0]="localhost"
fi
first_dns=${dns_array[0]}

# Ask for IP entries
#To DO
while true; do
    read -p "Enter IP entries separated by semicolon (;): " ip_input
    IFS=';' read -ra ip_array <<< "$ip_input"
    valid_ips=true

    for ip in "${ip_array[@]}"; do
        if [[ ! $ip =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Error: '$ip' no es una IP vÃ¡lida."
            valid_ips=false
            break
        fi
    done

    if [ "$valid_ips" = true ]; then
        break
    else
        echo "Please, enter valid IPs."
    fi
done


# Create the configuration file
cat <<EOF > "$config_file"
authorityKeyIdentifier=keyid,issuer
#basicConstraints=CA:TRUE
keyUsage = digitalSignature, nonRepudiation, keyEncipherment, dataEncipherment
extendedKeyUsage = serverAuth
subjectAltName = @alt_names

[alt_names]
EOF

# Add DNS and IP entries to the configuration file
dns_counter=1
ip_counter=1

for dns in "${dns_array[@]}"; do
    echo "DNS.$dns_counter = $dns" >> "$config_file"
    ((dns_counter++))
done
for ip in "${ip_array[@]}"; do
    echo "IP.$ip_counter = $ip" >> "$config_file"
    ((ip_counter++))
done

cat <<EOF >> "$config_file"
# Certificate request configuration
[req]
prompt = no
distinguished_name = req_distinguished_name

[req_distinguished_name]
C = ES
ST = Gipuzkoa
L = Elgoibar
O = SMARTPM
OU = IT
CN = $first_dns
EOF

echo "Configuration file '$config_file' created successfully."