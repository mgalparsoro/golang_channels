version: '3.5'

networks:
  mic-network:
    external: true
    name: ${NETWORK}

services:
  mic-zookeeper:
    build:
      context: ./kafka/image
      dockerfile: Dockerfile
    image: smartpm-kafka-2.7.0
    networks:
      - mic-network
    entrypoint: start-zookeeper
    volumes:
      - ./kafka/config/zookeeper.properties:/kafka/config/zookeeper.properties
    restart: always

  mic-kafka:
    image: smartpm-kafka-2.7.0
    networks:
      - mic-network
    entrypoint: start-kafka
    depends_on:
      - mic-zookeeper
    volumes:
      - ./kafka/config/server.properties:/kafka/config/server.properties
    restart: always

  mic-postgres:
    image: postgres:9.6.22
    networks:
      - mic-network
    environment:
      POSTGRES_PASSWORD: yeawea77
    depends_on:
      - mic-kafka
    ports:
      - 5432:5432
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
      - ./db_backup:/db_backup
    restart: always

  mic-sun:
    image: eclipse-temurin:8-jdk-alpine
    working_dir: /sun
    user: ${UID}:${GID}
    entrypoint: [ "java", "-jar", "sun.jar" ]
    volumes:
      - ./sun:/sun
    restart: always
    depends_on:
      - mic-postgres
    networks:
      - mic-network

  mic-jupiter:
    build:
      context: ./jupiter/image
      dockerfile: Dockerfile
    image: smartpm-jupiter
    volumes:
      - ./jupiter/build/:/www/build/
    depends_on:
      - mic-sun
    restart: always
    tty: true
    networks:
      - mic-network

  mic-historic-data:
    image: influxdb:1.8.10-alpine
    restart: always
    volumes:
      - ./historic-data:/var/lib/influxdb
    networks:
      - mic-network
    environment:
      - INFLUXDB_REPORTING_DISABLED=true
      - INFLUXDB_DATA_MAX_INDEX_LOG_FILE_SIZE=30m
      - INFLUXDB_HTTP_FLUX_ENABLED=true
      - INFLUXDB_HTTP_AUTH_ENABLED=true
      - INFLUXDB_ADMIN_USER=${INFLUXDB_ADMIN_USER:-admin}
      - INFLUXDB_ADMIN_PASSWORD=${INFLUXDB_ADMIN_PASSWORD:-admin}
      - INFLUXDB_DB=${INFLUXDB_DB:-mic}
    healthcheck:
      test: "nc -z -w5 localhost 8086 || exit 1"
      interval: 5s
      timeout: 10s
      retries: 5

  mic-data-recorder:
    image: python:3.8
    depends_on:
      mic-historic-data:
        condition: service_healthy
      mic-kafka:
        condition: service_started
    volumes:
      - ./data-recorder/:/app
    working_dir: /app
    entrypoint: [ "./data-recorder" ]
    env_file:
      - ./data-recorder/.env
    networks:
      - mic-network

  # Borrar
  mic-influx-api:
    build:
      context: ./dashboards
      dockerfile: Dockerfile
    user: ${UID}:${GID}
    image: mic-influx-api-mock-up
    networks:
      - mic-network

  mic-dashboards:
    image: grafana/grafana:9.3.8
    user: ${UID}:${GID}
    depends_on:
      mic-historic-data:
        condition: service_healthy
    volumes:
      - ./dashboards/grafana-vol:/var/lib/grafana
      - ./dashboards/provisioning/datasources:/etc/grafana/provisioning/datasources/
      - ./dashboards/provisioning/dashboards:/etc/grafana/provisioning/dashboards/
      - ./dashboards/machine-img:/usr/share/grafana/public/machine-img
      - ./dashboards/grafana-plugins/smartpm-influx-datasource/dist:/var/lib/grafana/plugins/smartpm-influx-datasource/dist
      - ./dashboards/key.pem:/etc/grafana/key.pem
      - ./dashboards/grafana-images/grafana_icon.svg:/usr/share/grafana/public/img/grafana_icon.svg
    restart: always
    environment:
      GF_AUTH_DISABLE_LOGIN: "true"
      GF_AUTH_DISABLE_LOGIN_FORM: "true"
      GF_AUTH_DISABLE_SIGNOUT_MENU: "true"
      GF_AUTH_JWT_ALLOW_ASSIGN_GRAFANA_ADMIN: "true"
      GF_AUTH_JWT_AUTO_SIGN_UP: "true"
      GF_AUTH_JWT_EMAIL_CLAIM: "sub"
      GF_AUTH_JWT_ENABLED: "true"
      GF_AUTH_JWT_HEADER_NAME: "X-JWT-Assertion"
      GF_AUTH_JWT_KEY_FILE: "/etc/grafana/key.pem"
      GF_AUTH_JWT_URL_LOGIN: "true"
      GF_AUTH_JWT_USERNAME_CLAIM: "sub"
      GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH: "/etc/grafana/provisioning/dashboards/Cell1KPIsPrecalc.json"
      GF_HELP_ENABLED: "false"
      GF_PANELS_DISABLE_SANITIZE_HTML: "true"
      GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS: smartpm-influx-datasource
      GF_PROFILE_ENABLED: "false"
      GF_SECURITY_ALLOW_EMBEDDING: "true"
      GF_USERS_ALLOW_ORG_CREATE: "false"
      GF_SERVER_DOMAIN: spm-local.es
      GF_SERVER_ROOT_URL: "%(protocol)s://%(domain)s/dashboards"
      GF_SERVER_SERVE_FROM_SUB_PATH: "true"
    networks:
      - mic-network

  mic-planner:
    image: python:3.8
    volumes:
      - ./planner/:/app
    working_dir: /app
    user: ${UID}:${GID}
    entrypoint: [ "./mic-planner" ]
    networks:
      - mic-network

  mic-proxy:
    image: nginx:1.21.0
    volumes:
      - ./proxy-conf/nginx.conf:/etc/nginx/nginx.conf
    restart: always
    ports:
      - 80:80
    depends_on:
      - mic-jupiter
    networks:
      - mic-network
